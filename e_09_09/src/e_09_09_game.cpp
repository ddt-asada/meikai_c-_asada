/*演習9-9
 * 数あてゲームを以下の使用で作成する。
 * ・充てるべき数を0～999とする。
 * プレイヤーが数値を入力できる回数を最大で10回までに制限する。
 * 入力ミスを行ったばあい（0～999以外の数を入力した）場合は回数としてカウントしない。
 * 正解した場合は何回で正解したのかを表示し、最後まで正解しなかった場合は正解を表示する。
 * 作成日：2017年5月14日
 * 作成者：浅田　知嗣
 */

#include <iostream>
#include <ctime>
#include <cstdlib>

//自作したヘッダの読み込み。
#include "e_09_09.h"

using namespace std;

//静的記憶域期間をもつ整数値の宣言。
namespace {
	int Answer = 0;
}

/*関数名：void initialize()
 * 乱数の種を設定するための関数。
 * 引数：なし。
 * 返却値：なし。
 * 作成日：2017年5月14日
 * 作成者：浅田　知嗣
 */

void initialize()
{

	//乱数の種を時間を参照に決定。
	srand(time(NULL));

}


/*関数名：void gen_no()
 * 当てるべき数（問題）の生成を行う関数。答え（Answer）は静的記憶域期間を持つ変数かつこのソースファイル内でしか利用しないので返却値はなしてとしている。
 * 引数：なし。
 * 返却値：なし。
 * 作成日：2017年5月14日
 * 作成者：浅田　知嗣
 */

void gen_no()
{

	//0～max_noまでの数を生成。max_noはメイン部で宣言されているかつ、ヘッダ部でソースファイル船体で使えるように宣言されている。
	Answer = rand() % (max_no + 1);

}

/*関数名：int judge(int cand)
 * 入力された答えが正解かどうかを判定する関数。返却先でここから返した値によって分岐する。
 * 引数int cand：入力された答え。
 * 返却値：正解なら0を不正解かつ答えより大きければ1を、小さければ2を返す。
 * 作成日：2017年5月14日
 * 作成者：浅田　知嗣
 */

int judge(int cand)
{
	//答えが正解だった場合。
	if(cand == Answer) {

		//0を返す。
		return 0;

	//入力された答えが正解より大きかった場合。
	} else if (cand > Answer) {

		//1を返す。
		return 1;

	//入力された答えが正解より小さかった場合。
	} else {

		//2を返す。
		return 2;
	}
}
