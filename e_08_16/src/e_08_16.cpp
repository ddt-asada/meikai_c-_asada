/*演習8-16
 * 文字列s内の数字文字を削除する関数strrmv_digitsを作成。
 * 作成日：2017年5月12日
 * 作成者：浅田　知嗣
 * 更新日：2017年5月15日
 * 更新者：浅田　知嗣
 */

#include <iostream>

using namespace std;

//関数宣言。
char* strrmv_digits(char* s);

int main()
{
	char	s[] = "a1b21fawc39999d";	//数字文字を含んだ文字列。ここから数字文字のみを削除する。

	//削除する関数にわたし、帰ってきた文字だけになった文字列を表示。
	cout	<<"数字文字を削除しました。"	<<strrmv_digits(s)	<<"\n";

	//0を返す。
	return 0;
}

/*関数名：char* strrmv_digits(char* s)
 * 受け取った文字列から数字文字を削除する関数。
 * 引数char* s：数字文字を削除する文字列。
 * 返却値：数字文字を削除した後の文字列。
 * 作成日：2017年5月12日
 * 作成者：浅田　知嗣
 * 更新日：2017年5月15日
 * 更新者：浅田　知嗣
 */

char* strrmv_digits(char* s)
{
	//文字列の長さだけ繰り返し、文字のみを抜き出すための繰り返し。
	for(int i = 0; s[i]; i++) {

		//もし数字文字を見つけたら数字文字から後ろの文字を一つずつ前にずらすことにより数字文字を削除。
		if(s[i] >= '0' && s[i] <= '9' ) {

			//数字文字を削除するための繰り返し。j番目の要素から後ろを前に詰める。
			for(; s[i]; i++) {

				//i+1番目にはナル文字が入っているので、前方にずらすと同時に最後の要素は自動的に削除されることになる。
				s[i] = s[i + 1];

			}
			//前に詰めたときに連続して同じ数字があると正常に判定されないのでまた一番先頭から走査しなおす。
			i = 0;
		}
	}

	//数字文字を削除した文字列を返す。
	return s;
}
