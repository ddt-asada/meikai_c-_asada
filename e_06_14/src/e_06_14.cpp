/*演習6-14
 * a,bを昇順にソートする関数sortを作成する。
 * 作成日：2017年5月3日
 * 作成者：浅田　知嗣
 * 更新日：2017年5月7日
 * 更新者：浅田　知嗣
 * 更新日：2017年5月9日
 * 更新者：浅田　知嗣
 * 更新日：2017年5月10日
 * 更新者：浅田　知嗣
 */

#include <iostream>

using namespace std;

//関数宣言。
void sort(int& swap1, int& swap2);

int main()
{

	int	SWAP1, SWAP2;	//入れ替えたい整数値の型。

	//入れ替えたい値の入力を促す。
	cout	<<"整数値SWAP1：";
	//入れ替えたい値の入力。
	cin		>>SWAP1;

	//入れ替えたい値の入力を促す。
	cout	<<"整数値SWAP2：";
	//入れ替えたい値の入力。
	cin		>>SWAP2;

	//昇順にソートする関数に参照渡しする。
	sort(SWAP1, SWAP2);

	//ソートされた値を表示する。
	cout	<<"整数値SWAP1："	<<SWAP1	<<'\n';

	//ソートされた値を表示する。
	cout	<<"整数値SWAP2："	<<SWAP2	<<'\n';

	//0を返す。
	return 0;
}

/*関数名：void sort(int& a, int& b);
 * aとbに参照された値を昇順にソートする関数。
 * 引数a：ソートしたい値。
 * 引数b：ソートしたい値。
 * 作成日：2017年5月3日
 * 作成者：浅田　知嗣
 * 更新日：2017年5月7日
 * 更新者：浅田　知嗣
 * 更新日：2017年5月9日
 * 更新者：浅田　知嗣
 * 更新日：2017年5月10日
 * 更新者：浅田　知嗣
 */

//引数を昇順にソートする関数。
void sort(int& swap1, int& swap2)
{

	int Sort;	//昇順に並び替えるための型。

	//swap1がswap2より小さい時は、値を入れ替える。
	if(swap1 > swap2) {

		Sort = swap2;	//ソートするための処理。
		swap2 = swap1;	//入れ替える。
		swap1 = Sort;	//入れ替える。

	}

	//この関数は渡された引数を参照しているので返却値がなくても自動的に参照先に値が代入される。
}
