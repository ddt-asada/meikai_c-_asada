/*演習5-8
 * 配列の要素の並びをシャッフルするプログラム。
 * 作成日：2017年5月3日
 * 作成者：浅田　知嗣
 */

#include <iostream>
//時間を参照するためのヘッダ。
#include <ctime>
//C言語の関数ライブラリを利用するためのヘッダ。
#include <cstdlib>

using namespace std;

int main()
{
	//乱数の種を時間を参照に決定。
	srand(time(NULL));

	//配列の要素数。
	const int n = 10;

	//乱数を入れるための配列を生成。
	int a[n] ;

	//シャッフルする相手を決定するための型。
	int x;

	//配列を0～100までの乱数で埋め尽くす繰り返し。
	for(int i = 0;i < n; i++){

		//乱数を代入。
		a[i] = rand() % 101;

		//シャッフルする前の配列を表示。
		cout << "a[" << i << "]=" << a[i] << '\n';
	}

	//配列の要素をシャッフルする繰り返し。
	for(int i = 0 ; i < n ; i++){

		//配列の要素の仮の置き場。
		int t = a[i];

		//配列a[i]とシャッフルする相手を決定。
		//シャッフルする相手が同じ場合は再抽選。
		do{
			x = rand() % n;
		}while(x == i);

		//シャッフルする。
		a[i] = a[x];
		a[x] = t;
	}

	//シャッフルし終わった配列を表示。
	for(int i = 0 ; i < n ; i++)
		cout << "a[" << i << "]=" << a[i] << '\n';
}
